<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <!-- Base Font Sizes -->
    <system:Double x:Key="BaseFontSize">12</system:Double>
    <system:Double x:Key="FontSizeSmall">11</system:Double>
    <system:Double x:Key="FontSizeNormal">14</system:Double>
    <system:Double x:Key="FontSizeLarge">18</system:Double>
    <system:Double x:Key="FontSizeTitle">24</system:Double>

    <!-- Modern Button Style -->
    <Style x:Key="ModernButton" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextPrimaryBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="16,8"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSizeNormal}"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="6"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center"
                                        VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PrimaryDarkBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value="0.8"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Icon Button Style -->
    <Style x:Key="IconButton" TargetType="Button" BasedOn="{StaticResource ModernButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="Width" Value="36"/>
        <Setter Property="Height" Value="36"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource SurfaceHighlightBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Slider Thumb Style -->
    <Style x:Key="SliderThumbStyle" TargetType="Thumb">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border Background="{DynamicResource PrimaryBrush}"
                            CornerRadius="6"
                            Width="20"
                            Height="14"
                            BorderThickness="2"
                            BorderBrush="{DynamicResource BackgroundBrush}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Slider Button Style -->
    <Style x:Key="SliderButtonStyle" TargetType="RepeatButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border Background="{TemplateBinding Background}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Modern Slider Style -->
    <Style x:Key="ModernSlider" TargetType="Slider">
        <Setter Property="Background" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="Orientation" Value="Vertical"/>
        <Setter Property="Minimum" Value="0"/>
        <Setter Property="Maximum" Value="1"/>
        <Setter Property="SmallChange" Value="0.01"/>
        <Setter Property="LargeChange" Value="0.1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Slider">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="3"
                                Width="8"
                                HorizontalAlignment="Center"/>

                        <Track x:Name="PART_Track" HorizontalAlignment="Center">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="Slider.DecreaseLarge"
                                            Style="{StaticResource SliderButtonStyle}"/>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="Slider.IncreaseLarge"
                                            Style="{StaticResource SliderButtonStyle}"/>
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource SliderThumbStyle}"/>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModernComboBox" TargetType="ComboBox">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Background" Value="{DynamicResource SurfaceBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextPrimaryBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="10,6"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSizeNormal}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <!-- Button area (custom-styled) -->
                        <ToggleButton x:Name="ToggleButton"
              Focusable="False"
              FocusVisualStyle="{x:Null}"
              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
              ClickMode="Press"
              Background="Transparent"
              BorderThickness="0"
              Cursor="Hand">
                            <!-- OVERRIDE DEFAULT CHROME -->
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="ToggleButton">
                                    <!-- no default Windows chrome, just host the content -->
                                    <ContentPresenter/>
                                </ControlTemplate>
                            </ToggleButton.Template>

                            <!-- your custom header visuals -->
                            <Border x:Name="BackgroundBorder"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="6">
                                <Grid>
                                    <ContentPresenter Margin="{TemplateBinding Padding}"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Left"
                              RecognizesAccessKey="True"
                              Content="{TemplateBinding SelectionBoxItem}"
                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                              ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                              TextElement.Foreground="{TemplateBinding Foreground}"
                              SnapsToDevicePixels="True"/>
                                    <Path x:Name="Arrow"
                  HorizontalAlignment="Right"
                  VerticalAlignment="Center"
                  Margin="0,0,10,0"
                  Data="M 0 0 L 4 4 L 8 0 Z"
                  Width="8"
                  Height="4"
                  Fill="{TemplateBinding Foreground}"/>
                                </Grid>
                            </Border>
                        </ToggleButton>


                        <!-- Dropdown popup -->
                        <Popup x:Name="PART_Popup"
                           Placement="Bottom"
                           AllowsTransparency="True"
                           Focusable="False"
                           IsOpen="{TemplateBinding IsDropDownOpen}"
                           PopupAnimation="Fade">
                            <Border Background="{DynamicResource SurfaceBrush}"
                                BorderBrush="{DynamicResource BorderBrush}"
                                BorderThickness="1"
                                CornerRadius="6">
                                <ScrollViewer>
                                    <StackPanel IsItemsHost="True"
                                            KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>

                    <!-- Visual States -->
                    <ControlTemplate.Triggers>
                        <!-- Hover -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{DynamicResource SurfaceHighlightBrush}"/>
                            <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="{DynamicResource PrimaryBrush}"/>
                        </Trigger>

                        <!-- Dropdown open -->
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{DynamicResource SurfaceBrush}" />
                            <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                            <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource PrimaryBrush}" />
                        </Trigger>


                        <!-- Disabled -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>





    <!-- ComboBoxItem Style for Themed Dropdowns -->
    <Style TargetType="ComboBoxItem">
        <Setter Property="Background" Value="{DynamicResource SurfaceBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextPrimaryBrush}" />
        <Setter Property="Padding" Value="8,4" />
        <Setter Property="FontSize" Value="{DynamicResource FontSizeNormal}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource SurfaceHighlightBrush}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource PrimaryBrush}" />
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>
    </Style>




    <!-- Modern TextBlock -->
    <Style x:Key="TitleTextBlock" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource TextPrimaryBrush}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSizeTitle}"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
    </Style>

    <Style x:Key="SubtitleTextBlock" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource TextSecondaryBrush}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSizeNormal}"/>
        <Setter Property="FontWeight" Value="Normal"/>
    </Style>

    <Style x:Key="LabelTextBlock" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource TextPrimaryBrush}"/>
        <Setter Property="FontSize" Value="{DynamicResource BaseFontSize}"/>
        <Setter Property="FontWeight" Value="Medium"/>
    </Style>

    <!-- Modern Card Style -->
    <Style x:Key="Card" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource SurfaceBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="8"/>
        <Setter Property="Padding" Value="16"/>
    </Style>

    <!-- Modern CheckBox Style -->
    <Style TargetType="CheckBox">
        <Setter Property="Foreground" Value="{DynamicResource TextPrimaryBrush}"/>
        <Setter Property="FontSize" Value="{DynamicResource BaseFontSize}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <!-- Checkbox Box -->
                        <Border x:Name="CheckBoxBorder"
                                Grid.Column="0"
                                Width="18"
                                Height="18"
                                Background="{DynamicResource SurfaceBrush}"
                                BorderBrush="{DynamicResource BorderBrush}"
                                BorderThickness="2"
                                CornerRadius="4"
                                VerticalAlignment="Center">
                            <!-- Check Mark -->
                            <Path x:Name="CheckMark"
                                  Data="M 1,4 L 4,7 L 9,1"
                                  Stroke="{DynamicResource PrimaryBrush}"
                                  StrokeThickness="2"
                                  Visibility="Collapsed"
                                  Margin="2"
                                  StrokeStartLineCap="Round"
                                  StrokeEndLineCap="Round"
                                  StrokeLineJoin="Round"/>
                        </Border>

                        <!-- Content -->
                        <ContentPresenter Grid.Column="1"
                                        Margin="8,0,0,0"
                                        VerticalAlignment="Center"
                                        RecognizesAccessKey="True"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!-- Checked State -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="CheckBoxBorder" Property="Background" Value="{DynamicResource SurfaceBrush}"/>
                            <Setter TargetName="CheckBoxBorder" Property="BorderBrush" Value="{DynamicResource PrimaryBrush}"/>
                        </Trigger>

                        <!-- Hover State -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="CheckBoxBorder" Property="BorderBrush" Value="{DynamicResource PrimaryBrush}"/>
                            <Setter TargetName="CheckBoxBorder" Property="Background" Value="{DynamicResource SurfaceHighlightBrush}"/>
                        </Trigger>

                        <!-- Disabled State -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
